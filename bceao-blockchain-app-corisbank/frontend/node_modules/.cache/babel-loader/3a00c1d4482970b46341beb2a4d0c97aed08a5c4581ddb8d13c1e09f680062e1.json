{"ast":null,"code":"var _jsxFileName = \"/home/hlfuser/Bureau/HLF_project_jyen/bceao-blockchain-app/frontend/src/components/ActiveClientList.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ActiveClientList.js\nimport React, { useState, useEffect } from 'react';\nimport { getActiveClients, getClientHistory } from '../services/api';\nimport ClientListBase from './common/ClientListBase';\nimport ClientHistoryModal from './common/ClientHistoryModal';\nimport ClientSearchBar from './common/ClientSearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ActiveClientList() {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [queryInfo, setQueryInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showHistory, setShowHistory] = useState(false);\n  const [selectedClientHistory, setSelectedClientHistory] = useState(null);\n  const [historyLoading, setHistoryLoading] = useState(false);\n  useEffect(() => {\n    loadClients();\n  }, []);\n  const loadClients = async () => {\n    try {\n      setLoading(true);\n      const response = await getActiveClients();\n      if (response !== null && response !== void 0 && response.clients) {\n        setClients(response.clients);\n        setFilteredClients(response.clients);\n        setQueryInfo(response.queryInfo);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = ({\n    type,\n    params,\n    result,\n    error: searchError,\n    searchType\n  }) => {\n    // Gestion des erreurs\n    if (searchError) {\n      setError(searchError);\n      return;\n    }\n\n    // Réinitialiser l'erreur si tout va bien\n    setError(null);\n    if (type === 'FACE') {\n      // Gestion de la recherche par reconnaissance faciale\n      if (!result || result.length === 0) {\n        // Si aucun résultat similaire n'est trouvé, garder la liste complète\n        setFilteredClients(clients);\n        setQueryInfo(prev => ({\n          ...prev,\n          totalResults: clients.length,\n          searchType: searchType || 'Face Recognition',\n          message: \"Aucun client similaire trouvé\"\n        }));\n      } else {\n        // Si des clients similaires sont trouvés\n        setFilteredClients(result);\n        setQueryInfo(prev => ({\n          ...prev,\n          totalResults: result.length,\n          searchType: searchType || 'Face Recognition',\n          message: null\n        }));\n      }\n    } else if (type === 'TEXT') {\n      // Gestion de la recherche textuelle\n      let filtered = [...clients];\n      const hasSearchCriteria = params.ubi || params.lastName || params.firstName;\n\n      // Appliquer les filtres textuels si des critères sont fournis\n      if (hasSearchCriteria) {\n        if (params.ubi) {\n          filtered = filtered.filter(client => client.UBI.toLowerCase().includes(params.ubi.toLowerCase().trim()));\n        }\n        if (params.lastName) {\n          filtered = filtered.filter(client => client.lastName.toLowerCase().includes(params.lastName.toLowerCase().trim()));\n        }\n        if (params.firstName) {\n          filtered = filtered.filter(client => client.firstName.toLowerCase().includes(params.firstName.toLowerCase().trim()));\n        }\n      }\n\n      // Mettre à jour l'état avec les résultats filtrés\n      setFilteredClients(filtered);\n      setQueryInfo(prev => ({\n        ...prev,\n        totalResults: filtered.length,\n        searchType: 'Text Search',\n        message: hasSearchCriteria && filtered.length === 0 ? \"Aucun client ne correspond aux critères de recherche\" : null\n      }));\n    }\n  };\n  const handleShowHistory = async ubi => {\n    try {\n      setHistoryLoading(true);\n      const history = await getClientHistory(ubi);\n      setSelectedClientHistory(history);\n      setShowHistory(true);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setHistoryLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(ClientSearchBar, {\n        onSearch: handleSearch,\n        clients: clients // Passer la liste des clients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClientListBase, {\n        title: \"Clients Actifs\",\n        clients: filteredClients,\n        queryInfo: queryInfo,\n        loading: loading,\n        error: error,\n        onShowHistory: handleShowHistory,\n        showSimilarity: (queryInfo === null || queryInfo === void 0 ? void 0 : queryInfo.searchType) === 'Face Recognition',\n        message: queryInfo === null || queryInfo === void 0 ? void 0 : queryInfo.message // Ajout du message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), showHistory && /*#__PURE__*/_jsxDEV(ClientHistoryModal, {\n        history: selectedClientHistory,\n        onClose: () => {\n          setShowHistory(false);\n          setSelectedClientHistory(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), historyLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(ActiveClientList, \"e7wkchvH40SCLZsW6J3h1aQ+aAo=\");\n_c = ActiveClientList;\nvar _c;\n$RefreshReg$(_c, \"ActiveClientList\");","map":{"version":3,"names":["React","useState","useEffect","getActiveClients","getClientHistory","ClientListBase","ClientHistoryModal","ClientSearchBar","jsxDEV","_jsxDEV","ActiveClientList","_s","clients","setClients","filteredClients","setFilteredClients","queryInfo","setQueryInfo","loading","setLoading","error","setError","showHistory","setShowHistory","selectedClientHistory","setSelectedClientHistory","historyLoading","setHistoryLoading","loadClients","response","err","message","handleSearch","type","params","result","searchError","searchType","length","prev","totalResults","filtered","hasSearchCriteria","ubi","lastName","firstName","filter","client","UBI","toLowerCase","includes","trim","handleShowHistory","history","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","title","onShowHistory","showSimilarity","onClose","_c","$RefreshReg$"],"sources":["/home/hlfuser/Bureau/HLF_project_jyen/bceao-blockchain-app/frontend/src/components/ActiveClientList.js"],"sourcesContent":["// frontend/src/components/ActiveClientList.js\nimport React, { useState, useEffect } from 'react';\nimport { getActiveClients, getClientHistory } from '../services/api';\nimport ClientListBase from './common/ClientListBase';\nimport ClientHistoryModal from './common/ClientHistoryModal';\nimport ClientSearchBar from './common/ClientSearchBar';\n\nexport default function ActiveClientList() {\n  const [clients, setClients] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [queryInfo, setQueryInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showHistory, setShowHistory] = useState(false);\n  const [selectedClientHistory, setSelectedClientHistory] = useState(null);\n  const [historyLoading, setHistoryLoading] = useState(false);\n\n  useEffect(() => {\n    loadClients();\n  }, []);\n\n  const loadClients = async () => {\n    try {\n      setLoading(true);\n      const response = await getActiveClients();\n\n      if (response?.clients) {\n        setClients(response.clients);\n        setFilteredClients(response.clients);\n        setQueryInfo(response.queryInfo);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = ({ type, params, result, error: searchError, searchType }) => {\n    // Gestion des erreurs\n    if (searchError) {\n        setError(searchError);\n        return;\n    }\n\n    // Réinitialiser l'erreur si tout va bien\n    setError(null);\n\n    if (type === 'FACE') {\n        // Gestion de la recherche par reconnaissance faciale\n        if (!result || result.length === 0) {\n            // Si aucun résultat similaire n'est trouvé, garder la liste complète\n            setFilteredClients(clients);\n            setQueryInfo(prev => ({\n                ...prev,\n                totalResults: clients.length,\n                searchType: searchType || 'Face Recognition',\n                message: \"Aucun client similaire trouvé\"\n            }));\n        } else {\n            // Si des clients similaires sont trouvés\n            setFilteredClients(result);\n            setQueryInfo(prev => ({\n                ...prev,\n                totalResults: result.length,\n                searchType: searchType || 'Face Recognition',\n                message: null\n            }));\n        }\n    } else if (type === 'TEXT') {\n        // Gestion de la recherche textuelle\n        let filtered = [...clients];\n        const hasSearchCriteria = params.ubi || params.lastName || params.firstName;\n\n        // Appliquer les filtres textuels si des critères sont fournis\n        if (hasSearchCriteria) {\n            if (params.ubi) {\n                filtered = filtered.filter(client =>\n                    client.UBI.toLowerCase().includes(params.ubi.toLowerCase().trim())\n                );\n            }\n            if (params.lastName) {\n                filtered = filtered.filter(client =>\n                    client.lastName.toLowerCase().includes(params.lastName.toLowerCase().trim())\n                );\n            }\n            if (params.firstName) {\n                filtered = filtered.filter(client =>\n                    client.firstName.toLowerCase().includes(params.firstName.toLowerCase().trim())\n                );\n            }\n        }\n\n        // Mettre à jour l'état avec les résultats filtrés\n        setFilteredClients(filtered);\n        setQueryInfo(prev => ({\n            ...prev,\n            totalResults: filtered.length,\n            searchType: 'Text Search',\n            message: hasSearchCriteria && filtered.length === 0 ? \n                    \"Aucun client ne correspond aux critères de recherche\" : \n                    null\n        }));\n    }\n};\n\n  const handleShowHistory = async (ubi) => {\n    try {\n      setHistoryLoading(true);\n      const history = await getClientHistory(ubi);\n      setSelectedClientHistory(history);\n      setShowHistory(true);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setHistoryLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-6\">\n      <div className=\"space-y-6\">\n        <ClientSearchBar \n          onSearch={handleSearch} \n          clients={clients} // Passer la liste des clients\n        />\n        <ClientListBase\n          title=\"Clients Actifs\"\n          clients={filteredClients}\n          queryInfo={queryInfo}\n          loading={loading}\n          error={error}\n          onShowHistory={handleShowHistory}\n          showSimilarity={queryInfo?.searchType === 'Face Recognition'}\n          message={queryInfo?.message} // Ajout du message\n        />\n\n        {showHistory && (\n          <ClientHistoryModal\n            history={selectedClientHistory}\n            onClose={() => {\n              setShowHistory(false);\n              setSelectedClientHistory(null);\n            }}\n          />\n        )}\n\n        {historyLoading && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,iBAAiB;AACpE,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,kBAAkB,MAAM,6BAA6B;AAC5D,OAAOC,eAAe,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd0B,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFT,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMU,QAAQ,GAAG,MAAM1B,gBAAgB,CAAC,CAAC;MAEzC,IAAI0B,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEjB,OAAO,EAAE;QACrBC,UAAU,CAACgB,QAAQ,CAACjB,OAAO,CAAC;QAC5BG,kBAAkB,CAACc,QAAQ,CAACjB,OAAO,CAAC;QACpCK,YAAY,CAACY,QAAQ,CAACb,SAAS,CAAC;MAClC;IACF,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAC;IAAEC,IAAI;IAAEC,MAAM;IAAEC,MAAM;IAAEf,KAAK,EAAEgB,WAAW;IAAEC;EAAW,CAAC,KAAK;IACjF;IACA,IAAID,WAAW,EAAE;MACbf,QAAQ,CAACe,WAAW,CAAC;MACrB;IACJ;;IAEA;IACAf,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAIY,IAAI,KAAK,MAAM,EAAE;MACjB;MACA,IAAI,CAACE,MAAM,IAAIA,MAAM,CAACG,MAAM,KAAK,CAAC,EAAE;QAChC;QACAvB,kBAAkB,CAACH,OAAO,CAAC;QAC3BK,YAAY,CAACsB,IAAI,KAAK;UAClB,GAAGA,IAAI;UACPC,YAAY,EAAE5B,OAAO,CAAC0B,MAAM;UAC5BD,UAAU,EAAEA,UAAU,IAAI,kBAAkB;UAC5CN,OAAO,EAAE;QACb,CAAC,CAAC,CAAC;MACP,CAAC,MAAM;QACH;QACAhB,kBAAkB,CAACoB,MAAM,CAAC;QAC1BlB,YAAY,CAACsB,IAAI,KAAK;UAClB,GAAGA,IAAI;UACPC,YAAY,EAAEL,MAAM,CAACG,MAAM;UAC3BD,UAAU,EAAEA,UAAU,IAAI,kBAAkB;UAC5CN,OAAO,EAAE;QACb,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,MAAM,IAAIE,IAAI,KAAK,MAAM,EAAE;MACxB;MACA,IAAIQ,QAAQ,GAAG,CAAC,GAAG7B,OAAO,CAAC;MAC3B,MAAM8B,iBAAiB,GAAGR,MAAM,CAACS,GAAG,IAAIT,MAAM,CAACU,QAAQ,IAAIV,MAAM,CAACW,SAAS;;MAE3E;MACA,IAAIH,iBAAiB,EAAE;QACnB,IAAIR,MAAM,CAACS,GAAG,EAAE;UACZF,QAAQ,GAAGA,QAAQ,CAACK,MAAM,CAACC,MAAM,IAC7BA,MAAM,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,MAAM,CAACS,GAAG,CAACM,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CACrE,CAAC;QACL;QACA,IAAIjB,MAAM,CAACU,QAAQ,EAAE;UACjBH,QAAQ,GAAGA,QAAQ,CAACK,MAAM,CAACC,MAAM,IAC7BA,MAAM,CAACH,QAAQ,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,MAAM,CAACU,QAAQ,CAACK,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAC/E,CAAC;QACL;QACA,IAAIjB,MAAM,CAACW,SAAS,EAAE;UAClBJ,QAAQ,GAAGA,QAAQ,CAACK,MAAM,CAACC,MAAM,IAC7BA,MAAM,CAACF,SAAS,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,MAAM,CAACW,SAAS,CAACI,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CACjF,CAAC;QACL;MACJ;;MAEA;MACApC,kBAAkB,CAAC0B,QAAQ,CAAC;MAC5BxB,YAAY,CAACsB,IAAI,KAAK;QAClB,GAAGA,IAAI;QACPC,YAAY,EAAEC,QAAQ,CAACH,MAAM;QAC7BD,UAAU,EAAE,aAAa;QACzBN,OAAO,EAAEW,iBAAiB,IAAID,QAAQ,CAACH,MAAM,KAAK,CAAC,GAC3C,sDAAsD,GACtD;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAEC,MAAMc,iBAAiB,GAAG,MAAOT,GAAG,IAAK;IACvC,IAAI;MACFhB,iBAAiB,CAAC,IAAI,CAAC;MACvB,MAAM0B,OAAO,GAAG,MAAMjD,gBAAgB,CAACuC,GAAG,CAAC;MAC3ClB,wBAAwB,CAAC4B,OAAO,CAAC;MACjC9B,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRJ,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,oBACElB,OAAA;IAAK6C,SAAS,EAAC,6BAA6B;IAAAC,QAAA,eAC1C9C,OAAA;MAAK6C,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9C,OAAA,CAACF,eAAe;QACdiD,QAAQ,EAAExB,YAAa;QACvBpB,OAAO,EAAEA,OAAQ,CAAC;MAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACFnD,OAAA,CAACJ,cAAc;QACbwD,KAAK,EAAC,gBAAgB;QACtBjD,OAAO,EAAEE,eAAgB;QACzBE,SAAS,EAAEA,SAAU;QACrBE,OAAO,EAAEA,OAAQ;QACjBE,KAAK,EAAEA,KAAM;QACb0C,aAAa,EAAEV,iBAAkB;QACjCW,cAAc,EAAE,CAAA/C,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEqB,UAAU,MAAK,kBAAmB;QAC7DN,OAAO,EAAEf,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEe,OAAQ,CAAC;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EAEDtC,WAAW,iBACVb,OAAA,CAACH,kBAAkB;QACjB+C,OAAO,EAAE7B,qBAAsB;QAC/BwC,OAAO,EAAEA,CAAA,KAAM;UACbzC,cAAc,CAAC,KAAK,CAAC;UACrBE,wBAAwB,CAAC,IAAI,CAAC;QAChC;MAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF,EAEAlC,cAAc,iBACbjB,OAAA;QAAK6C,SAAS,EAAC,4EAA4E;QAAAC,QAAA,eACzF9C,OAAA;UAAK6C,SAAS,EAAC;QAA6D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjD,EAAA,CApJuBD,gBAAgB;AAAAuD,EAAA,GAAhBvD,gBAAgB;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}