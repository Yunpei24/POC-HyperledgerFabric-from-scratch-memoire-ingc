{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nconst API_AI_URL = 'http://127.0.0.1:5001/api/face-recognition';\n\n// Fonction pour comparer une image avec celle d'un client\nexport const compareImages = async (uploadedImage, clientImageUrl) => {\n  try {\n    // Convertir l'URL de l'image client en fichier\n    const clientImageResponse = await fetch(clientImageUrl);\n    const clientImageBlob = await clientImageResponse.blob();\n    const clientImageFile = new File([clientImageBlob], 'clientImage.jpg', {\n      type: 'image/jpeg'\n    });\n    const formData = new FormData();\n    formData.append('image1', uploadedImage);\n    formData.append('image2', clientImageFile);\n    const response = await axios.post(`${API_AI_URL}/face-recognition`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la comparaison:', error);\n    throw new Error('Erreur lors de la comparaison des images');\n  }\n};\n\n// Fonction pour rechercher les clients similaires\nexport const searchClientsByFace = async (uploadedImage, clients) => {\n  try {\n    const similarClients = [];\n\n    // Parcourir tous les clients et comparer leurs images\n    for (const client of clients) {\n      if (client.imageFace) {\n        try {\n          const {\n            similarity,\n            is_similar\n          } = await compareImages(uploadedImage, client.imageFace);\n          if (is_similar) {\n            similarClients.push({\n              ...client,\n              similarity: similarity\n            });\n          }\n        } catch (error) {\n          console.error(`Erreur lors de la comparaison avec le client ${client.UBI}:`, error);\n          continue; // Passer au client suivant en cas d'erreur\n        }\n      }\n    }\n\n    // Trier les clients par score de similarité décroissant\n    return similarClients.sort((a, b) => b.similarity - a.similarity);\n  } catch (error) {\n    throw new Error('Erreur lors de la recherche des clients similaires');\n  }\n};\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercepteur pour ajouter le token aux requêtes\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user !== null && user !== void 0 && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n});\n\n// Fonctions d'authentification\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Erreur de connexion');\n  }\n};\n\n// Fonctions de gestion des clients\nexport const getAllClients = async () => {\n  try {\n    const response = await api.get('/clients/all');\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Erreur lors de la récupération des clients');\n  }\n};\nexport const getClient = async ubi => {\n  try {\n    const response = await api.get(`/clients/${ubi}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Erreur lors de la récupération du client');\n  }\n};\nexport const getActiveClients = async () => {\n  try {\n    const response = await api.get('/clients/active');\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Erreur lors de la récupération des clients actifs');\n  }\n};\nexport const createClient = async clientData => {\n  try {\n    const response = await api.post('/clients/create', clientData);\n\n    // Si la réponse contient des similitudes\n    if (response.data && response.data.similitude === true) {\n      return {\n        similitude: true,\n        potentialClient: response.data.potentialClient,\n        similarClients: response.data.similarClients\n      };\n    }\n\n    // Si pas de similitudes, retourner le client créé\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data, _error$response6, _error$response6$data;\n    // Si l'erreur contient des informations de similitude\n    if ((_error$response5 = error.response) !== null && _error$response5 !== void 0 && (_error$response5$data = _error$response5.data) !== null && _error$response5$data !== void 0 && _error$response5$data.similitude) {\n      return {\n        similitude: true,\n        potentialClient: error.response.data.potentialClient,\n        similarClients: error.response.data.similarClients\n      };\n    }\n\n    // Sinon, lancer une erreur standard\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Erreur lors de la création du client');\n  }\n};\nexport const updateClient = async (ubi, clientData) => {\n  try {\n    const response = await api.put(`/clients/${ubi}`, clientData);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n    throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'Erreur lors de la mise à jour du client');\n  }\n};\nexport const deactivateClient = async ubi => {\n  try {\n    const response = await api.delete(`/clients/${ubi}`);\n    return response.data;\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n    throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || 'Erreur lors de la désactivation du client');\n  }\n};\nexport const activateClient = async ubi => {\n  try {\n    const response = await api.put(`/clients/${ubi}/activate`);\n    return response.data;\n  } catch (error) {\n    var _error$response9, _error$response9$data;\n    throw new Error(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.error) || 'Erreur lors de l\\'activation du client');\n  }\n};\nexport const getClientHistory = async ubi => {\n  try {\n    const response = await api.get(`/clients/${ubi}/history`);\n    return response.data;\n  } catch (error) {\n    var _error$response10, _error$response10$dat;\n    throw new Error(((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.error) || 'Erreur lors de la récupération de l\\'historique');\n  }\n};\nexport const addAccountToClient = async (ubi, accountData) => {\n  try {\n    const response = await api.post(`/clients/${ubi}/accounts`, accountData);\n    return response.data;\n  } catch (error) {\n    var _error$response11, _error$response11$dat;\n    throw new Error(((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.error) || 'Erreur lors de l\\'ajout du compte');\n  }\n};\nexport const removeAccount = async (ubi, accountNumber) => {\n  try {\n    const response = await api.delete(`/clients/${ubi}/accounts/${accountNumber}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addNationality = async (ubi, nationalityData) => {\n  try {\n    const response = await api.post(`/clients/${ubi}/nationalities`, nationalityData);\n    return response.data;\n  } catch (error) {\n    var _error$response12, _error$response12$dat;\n    throw new Error(((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.error) || \"Erreur lors de l'ajout de la nationalité\");\n  }\n};\nexport const removeNationality = async (ubi, countryName) => {\n  try {\n    const response = await api.delete(`/clients/${ubi}/nationalities/${countryName}`);\n    return response.data;\n  } catch (error) {\n    var _error$response13, _error$response13$dat;\n    throw new Error(((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : (_error$response13$dat = _error$response13.data) === null || _error$response13$dat === void 0 ? void 0 : _error$response13$dat.error) || 'Erreur lors de la suppression de la nationalité');\n  }\n};\n\n// Fonctions utilitaires\nexport const logout = () => {\n  localStorage.removeItem('user');\n};\nexport const isAuthenticated = () => {\n  const user = localStorage.getItem('user');\n  return !!user;\n};\nexport const getCurrentUser = () => {\n  try {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  } catch (error) {\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","API_AI_URL","compareImages","uploadedImage","clientImageUrl","clientImageResponse","fetch","clientImageBlob","blob","clientImageFile","File","type","formData","FormData","append","response","post","headers","data","error","console","Error","searchClientsByFace","clients","similarClients","client","imageFace","similarity","is_similar","push","UBI","sort","a","b","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization","login","credentials","_error$response","_error$response$data","getAllClients","get","_error$response2","_error$response2$data","getClient","ubi","_error$response3","_error$response3$data","getActiveClients","_error$response4","_error$response4$data","createClient","clientData","similitude","potentialClient","_error$response5","_error$response5$data","_error$response6","_error$response6$data","updateClient","put","_error$response7","_error$response7$data","deactivateClient","delete","_error$response8","_error$response8$data","activateClient","_error$response9","_error$response9$data","getClientHistory","_error$response10","_error$response10$dat","addAccountToClient","accountData","_error$response11","_error$response11$dat","removeAccount","accountNumber","addNationality","nationalityData","_error$response12","_error$response12$dat","removeNationality","countryName","_error$response13","_error$response13$dat","logout","removeItem","isAuthenticated","getCurrentUser"],"sources":["/home/hlfuser/Bureau/HLF_project_jyen/bceao-blockchain-app/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\n\nconst API_AI_URL = 'http://127.0.0.1:5001/api/face-recognition';\n\n// Fonction pour comparer une image avec celle d'un client\nexport const compareImages = async (uploadedImage, clientImageUrl) => {\n    try {\n        // Convertir l'URL de l'image client en fichier\n        const clientImageResponse = await fetch(clientImageUrl);\n        const clientImageBlob = await clientImageResponse.blob();\n        const clientImageFile = new File([clientImageBlob], 'clientImage.jpg', { type: 'image/jpeg' });\n\n        const formData = new FormData();\n        formData.append('image1', uploadedImage);\n        formData.append('image2', clientImageFile);\n        \n        const response = await axios.post(`${API_AI_URL}/face-recognition`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            }\n        });\n        \n        return response.data;\n    } catch (error) {\n        console.error('Erreur lors de la comparaison:', error);\n        throw new Error('Erreur lors de la comparaison des images');\n    }\n};\n\n// Fonction pour rechercher les clients similaires\nexport const searchClientsByFace = async (uploadedImage, clients) => {\n    try {\n        const similarClients = [];\n        \n        // Parcourir tous les clients et comparer leurs images\n        for (const client of clients) {\n            if (client.imageFace) {\n                try {\n                    const { similarity, is_similar } = await compareImages(uploadedImage, client.imageFace);\n                    \n                    if (is_similar) {\n                        similarClients.push({\n                            ...client,\n                            similarity: similarity\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Erreur lors de la comparaison avec le client ${client.UBI}:`, error);\n                    continue; // Passer au client suivant en cas d'erreur\n                }\n            }\n        }\n        \n        // Trier les clients par score de similarité décroissant\n        return similarClients.sort((a, b) => b.similarity - a.similarity);\n        \n    } catch (error) {\n        throw new Error('Erreur lors de la recherche des clients similaires');\n    }\n};\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// Intercepteur pour ajouter le token aux requêtes\napi.interceptors.request.use((config) => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user?.token) {\n        config.headers.Authorization = `Bearer ${user.token}`;\n    }\n    return config;\n});\n\n// Fonctions d'authentification\nexport const login = async (credentials) => {\n    try {\n        const response = await api.post('/auth/login', credentials);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur de connexion');\n    }\n};\n\n// Fonctions de gestion des clients\nexport const getAllClients = async () => {\n    try {\n        const response = await api.get('/clients/all');\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de la récupération des clients');\n    }\n};\n\nexport const getClient = async (ubi) => {\n    try {\n        const response = await api.get(`/clients/${ubi}`);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de la récupération du client');\n    }\n};\n\nexport const getActiveClients = async () => {\n    try {\n      const response = await api.get('/clients/active');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.error || 'Erreur lors de la récupération des clients actifs');\n    }\n  };\n\n  export const createClient = async (clientData) => {\n    try {\n        const response = await api.post('/clients/create', clientData);\n        \n        // Si la réponse contient des similitudes\n        if (response.data && response.data.similitude === true) {\n            return {\n                similitude: true,\n                potentialClient: response.data.potentialClient,\n                similarClients: response.data.similarClients\n            };\n        }\n\n        // Si pas de similitudes, retourner le client créé\n        return response.data;\n\n    } catch (error) {\n        // Si l'erreur contient des informations de similitude\n        if (error.response?.data?.similitude) {\n            return {\n                similitude: true,\n                potentialClient: error.response.data.potentialClient,\n                similarClients: error.response.data.similarClients\n            };\n        }\n\n        // Sinon, lancer une erreur standard\n        throw new Error(error.response?.data?.error || 'Erreur lors de la création du client');\n    }\n};\n\n\nexport const updateClient = async (ubi, clientData) => {\n    try {\n        const response = await api.put(`/clients/${ubi}`, clientData);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de la mise à jour du client');\n    }\n};\n\nexport const deactivateClient = async (ubi) => {\n    try {\n        const response = await api.delete(`/clients/${ubi}`);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de la désactivation du client');\n    }\n};\n\nexport const activateClient = async (ubi) => {\n    try {\n        const response = await api.put(`/clients/${ubi}/activate`);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de l\\'activation du client');\n    }\n};\n\nexport const getClientHistory = async (ubi) => {\n    try {\n        const response = await api.get(`/clients/${ubi}/history`);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de la récupération de l\\'historique');\n    }\n};\n\nexport const addAccountToClient = async (ubi, accountData) => {\n    try {\n        const response = await api.post(`/clients/${ubi}/accounts`, accountData);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de l\\'ajout du compte');\n    }\n};\n\nexport const removeAccount = async (ubi, accountNumber) => {\n    try {\n        const response = await api.delete(`/clients/${ubi}/accounts/${accountNumber}`);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const addNationality = async (ubi, nationalityData) => {\n    try {\n        const response = await api.post(`/clients/${ubi}/nationalities`, nationalityData);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || \"Erreur lors de l'ajout de la nationalité\");\n    }\n};\n\nexport const removeNationality = async (ubi, countryName) => {\n    try {\n        const response = await api.delete(`/clients/${ubi}/nationalities/${countryName}`);\n        return response.data;\n    } catch (error) {\n        throw new Error(error.response?.data?.error || 'Erreur lors de la suppression de la nationalité');\n    }\n};\n\n// Fonctions utilitaires\nexport const logout = () => {\n    localStorage.removeItem('user');\n};\n\nexport const isAuthenticated = () => {\n    const user = localStorage.getItem('user');\n    return !!user;\n};\n\nexport const getCurrentUser = () => {\n    try {\n        const user = localStorage.getItem('user');\n        return user ? JSON.parse(user) : null;\n    } catch (error) {\n        return null;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}