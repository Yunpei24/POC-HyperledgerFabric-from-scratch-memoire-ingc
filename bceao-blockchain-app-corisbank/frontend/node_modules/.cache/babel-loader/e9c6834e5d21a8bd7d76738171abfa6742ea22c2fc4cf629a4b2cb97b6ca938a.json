{"ast":null,"code":"var _jsxFileName = \"/home/hlfuser/Bureau/HLF_project_jyen/bceao-blockchain-app/frontend/src/components/AllClientsList.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AllClientsList.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllClients, getClientHistory } from '../services/api';\nimport ClientListBase from './common/ClientListBase';\nimport ClientHistoryModal from './common/ClientHistoryModal';\nimport ClientSearchBar from './common/ClientSearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllClientsList() {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [queryInfo, setQueryInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showHistory, setShowHistory] = useState(false);\n  const [selectedClientHistory, setSelectedClientHistory] = useState(null);\n  const [historyLoading, setHistoryLoading] = useState(false);\n  useEffect(() => {\n    loadClients();\n  }, []);\n  const loadClients = async () => {\n    try {\n      setLoading(true);\n      const response = await getAllClients();\n      if (Array.isArray(response)) {\n        setClients(response);\n        setFilteredClients(response);\n        if (response.length > 0 && response[0].queryMetadata) {\n          setQueryInfo({\n            totalResults: response.length,\n            querier: response[0].queryMetadata.queriedBy.mspId,\n            timestamp: response[0].queryMetadata.queriedBy.timestamp\n          });\n        }\n      } else {\n        console.error('Format de réponse inattendu:', response);\n        setClients([]);\n        setFilteredClients([]);\n        setQueryInfo(null);\n      }\n    } catch (err) {\n      console.error('Erreur lors du chargement des clients:', err);\n      setError('Erreur lors du chargement des clients');\n      setClients([]);\n      setFilteredClients([]);\n      setQueryInfo(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = ({\n    type,\n    params,\n    result,\n    error: searchError,\n    searchType\n  }) => {\n    // Gestion des erreurs\n    if (searchError) {\n      setError(searchError);\n      return;\n    }\n\n    // Réinitialiser l'erreur\n    setError(null);\n    if (type === 'FACE') {\n      if (!result || result.length === 0) {\n        // Si aucune correspondance faciale, afficher la liste vide avec le message\n        setFilteredClients([]); // ICI: on met une liste vide au lieu de clients\n        setQueryInfo(prev => ({\n          ...prev,\n          totalResults: 0,\n          // ICI: on met 0 au lieu de clients.length\n          searchType: 'Face Recognition',\n          message: \"Aucun client similaire trouvé\"\n        }));\n      } else {\n        setFilteredClients(result);\n        setQueryInfo(prev => ({\n          ...prev,\n          totalResults: result.length,\n          searchType: 'Face Recognition',\n          message: null\n        }));\n      }\n    } else if (type === 'TEXT') {\n      let filtered = [...clients];\n      const hasSearchCriteria = params.ubi || params.lastName || params.firstName;\n      if (hasSearchCriteria) {\n        if (params.ubi) {\n          filtered = filtered.filter(client => client.UBI.toLowerCase().includes(params.ubi.toLowerCase().trim()));\n        }\n        if (params.lastName) {\n          filtered = filtered.filter(client => client.lastName.toLowerCase().includes(params.lastName.toLowerCase().trim()));\n        }\n        if (params.firstName) {\n          filtered = filtered.filter(client => client.firstName.toLowerCase().includes(params.firstName.toLowerCase().trim()));\n        }\n      }\n      setFilteredClients(filtered);\n      setQueryInfo(prev => ({\n        ...prev,\n        totalResults: filtered.length,\n        searchType: 'Text Search',\n        message: hasSearchCriteria && filtered.length === 0 ? \"Aucun client ne correspond aux critères de recherche\" : null\n      }));\n    }\n  };\n  const handleShowHistory = async ubi => {\n    try {\n      setHistoryLoading(true);\n      const history = await getClientHistory(ubi);\n      setSelectedClientHistory(history);\n      setShowHistory(true);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setHistoryLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(ClientSearchBar, {\n        onSearch: handleSearch,\n        clients: clients // Passer la liste des clients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ClientListBase, {\n        title: \"Clients Actifs\",\n        clients: filteredClients,\n        queryInfo: queryInfo,\n        loading: loading,\n        error: error,\n        onShowHistory: handleShowHistory,\n        showSimilarity: (queryInfo === null || queryInfo === void 0 ? void 0 : queryInfo.searchType) === 'Face Recognition',\n        message: queryInfo === null || queryInfo === void 0 ? void 0 : queryInfo.message // Ajout du message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), showHistory && /*#__PURE__*/_jsxDEV(ClientHistoryModal, {\n        history: selectedClientHistory,\n        onClose: () => {\n          setShowHistory(false);\n          setSelectedClientHistory(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), historyLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(AllClientsList, \"e7wkchvH40SCLZsW6J3h1aQ+aAo=\");\n_c = AllClientsList;\nvar _c;\n$RefreshReg$(_c, \"AllClientsList\");","map":{"version":3,"names":["React","useState","useEffect","getAllClients","getClientHistory","ClientListBase","ClientHistoryModal","ClientSearchBar","jsxDEV","_jsxDEV","AllClientsList","_s","clients","setClients","filteredClients","setFilteredClients","queryInfo","setQueryInfo","loading","setLoading","error","setError","showHistory","setShowHistory","selectedClientHistory","setSelectedClientHistory","historyLoading","setHistoryLoading","loadClients","response","Array","isArray","length","queryMetadata","totalResults","querier","queriedBy","mspId","timestamp","console","err","handleSearch","type","params","result","searchError","searchType","prev","message","filtered","hasSearchCriteria","ubi","lastName","firstName","filter","client","UBI","toLowerCase","includes","trim","handleShowHistory","history","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","title","onShowHistory","showSimilarity","onClose","_c","$RefreshReg$"],"sources":["/home/hlfuser/Bureau/HLF_project_jyen/bceao-blockchain-app/frontend/src/components/AllClientsList.js"],"sourcesContent":["// frontend/src/components/AllClientsList.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllClients, getClientHistory } from '../services/api';\nimport ClientListBase from './common/ClientListBase';\nimport ClientHistoryModal from './common/ClientHistoryModal';\nimport ClientSearchBar from './common/ClientSearchBar';\n\nexport default function AllClientsList() {\n    const [clients, setClients] = useState([]);\n    const [filteredClients, setFilteredClients] = useState([]);\n    const [queryInfo, setQueryInfo] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [showHistory, setShowHistory] = useState(false);\n    const [selectedClientHistory, setSelectedClientHistory] = useState(null);\n    const [historyLoading, setHistoryLoading] = useState(false);\n\n    useEffect(() => {\n        loadClients();\n    }, []);\n\n    const loadClients = async () => {\n        try {\n            setLoading(true);\n            const response = await getAllClients();\n\n            if (Array.isArray(response)) {\n                setClients(response);\n                setFilteredClients(response);\n                \n                if (response.length > 0 && response[0].queryMetadata) {\n                    setQueryInfo({\n                        totalResults: response.length,\n                        querier: response[0].queryMetadata.queriedBy.mspId,\n                        timestamp: response[0].queryMetadata.queriedBy.timestamp\n                    });\n                }\n            } else {\n                console.error('Format de réponse inattendu:', response);\n                setClients([]);\n                setFilteredClients([]);\n                setQueryInfo(null);\n            }\n        } catch (err) {\n            console.error('Erreur lors du chargement des clients:', err);\n            setError('Erreur lors du chargement des clients');\n            setClients([]);\n            setFilteredClients([]);\n            setQueryInfo(null);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleSearch = ({ type, params, result, error: searchError, searchType }) => {\n        // Gestion des erreurs\n        if (searchError) {\n          setError(searchError);\n          return;\n        }\n    \n        // Réinitialiser l'erreur\n        setError(null);\n    \n        if (type === 'FACE') {\n          if (!result || result.length === 0) {\n            // Si aucune correspondance faciale, afficher la liste vide avec le message\n            setFilteredClients([]); // ICI: on met une liste vide au lieu de clients\n            setQueryInfo(prev => ({\n              ...prev,\n              totalResults: 0, // ICI: on met 0 au lieu de clients.length\n              searchType: 'Face Recognition',\n              message: \"Aucun client similaire trouvé\"\n            }));\n          } else {\n            setFilteredClients(result);\n            setQueryInfo(prev => ({\n              ...prev,\n              totalResults: result.length,\n              searchType: 'Face Recognition',\n              message: null\n            }));\n          }\n        } else if (type === 'TEXT') {\n          let filtered = [...clients];\n          const hasSearchCriteria = params.ubi || params.lastName || params.firstName;\n    \n          if (hasSearchCriteria) {\n            if (params.ubi) {\n              filtered = filtered.filter(client =>\n                client.UBI.toLowerCase().includes(params.ubi.toLowerCase().trim())\n              );\n            }\n            if (params.lastName) {\n              filtered = filtered.filter(client =>\n                client.lastName.toLowerCase().includes(params.lastName.toLowerCase().trim())\n              );\n            }\n            if (params.firstName) {\n              filtered = filtered.filter(client =>\n                client.firstName.toLowerCase().includes(params.firstName.toLowerCase().trim())\n              );\n            }\n          }\n    \n          setFilteredClients(filtered);\n          setQueryInfo(prev => ({\n            ...prev,\n            totalResults: filtered.length,\n            searchType: 'Text Search',\n            message: hasSearchCriteria && filtered.length === 0 ? \n              \"Aucun client ne correspond aux critères de recherche\" : \n              null\n          }));\n        }\n    };\n    \n    const handleShowHistory = async (ubi) => {\n        try {\n            setHistoryLoading(true);\n            const history = await getClientHistory(ubi);\n            setSelectedClientHistory(history);\n            setShowHistory(true);\n        } catch (err) {\n            console.error(err);\n        } finally {\n            setHistoryLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto px-4 py-6\">\n            <div className=\"space-y-6\">\n                {/* Barre de recherche */}\n                <ClientSearchBar \n                    onSearch={handleSearch} \n                    clients={clients} // Passer la liste des clients\n                />\n\n                {/* Liste des clients */}\n                <ClientListBase\n                    title=\"Clients Actifs\"\n                    clients={filteredClients}\n                    queryInfo={queryInfo}\n                    loading={loading}\n                    error={error}\n                    onShowHistory={handleShowHistory}\n                    showSimilarity={queryInfo?.searchType === 'Face Recognition'}\n                    message={queryInfo?.message} // Ajout du message\n                />\n\n                {/* Modal d'historique */}\n                {showHistory && (\n                    <ClientHistoryModal\n                        history={selectedClientHistory}\n                        onClose={() => {\n                            setShowHistory(false);\n                            setSelectedClientHistory(null);\n                        }}\n                    />\n                )}\n\n                {/* Indicateur de chargement pour l'historique */}\n                {historyLoading && (\n                    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n                        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white\"></div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,iBAAiB;AACjE,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,kBAAkB,MAAM,6BAA6B;AAC5D,OAAOC,eAAe,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACZ0B,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACAT,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMU,QAAQ,GAAG,MAAM1B,aAAa,CAAC,CAAC;MAEtC,IAAI2B,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QACzBhB,UAAU,CAACgB,QAAQ,CAAC;QACpBd,kBAAkB,CAACc,QAAQ,CAAC;QAE5B,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,IAAIH,QAAQ,CAAC,CAAC,CAAC,CAACI,aAAa,EAAE;UAClDhB,YAAY,CAAC;YACTiB,YAAY,EAAEL,QAAQ,CAACG,MAAM;YAC7BG,OAAO,EAAEN,QAAQ,CAAC,CAAC,CAAC,CAACI,aAAa,CAACG,SAAS,CAACC,KAAK;YAClDC,SAAS,EAAET,QAAQ,CAAC,CAAC,CAAC,CAACI,aAAa,CAACG,SAAS,CAACE;UACnD,CAAC,CAAC;QACN;MACJ,CAAC,MAAM;QACHC,OAAO,CAACnB,KAAK,CAAC,8BAA8B,EAAES,QAAQ,CAAC;QACvDhB,UAAU,CAAC,EAAE,CAAC;QACdE,kBAAkB,CAAC,EAAE,CAAC;QACtBE,YAAY,CAAC,IAAI,CAAC;MACtB;IACJ,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACVD,OAAO,CAACnB,KAAK,CAAC,wCAAwC,EAAEoB,GAAG,CAAC;MAC5DnB,QAAQ,CAAC,uCAAuC,CAAC;MACjDR,UAAU,CAAC,EAAE,CAAC;MACdE,kBAAkB,CAAC,EAAE,CAAC;MACtBE,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMsB,YAAY,GAAGA,CAAC;IAAEC,IAAI;IAAEC,MAAM;IAAEC,MAAM;IAAExB,KAAK,EAAEyB,WAAW;IAAEC;EAAW,CAAC,KAAK;IAC/E;IACA,IAAID,WAAW,EAAE;MACfxB,QAAQ,CAACwB,WAAW,CAAC;MACrB;IACF;;IAEA;IACAxB,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAIqB,IAAI,KAAK,MAAM,EAAE;MACnB,IAAI,CAACE,MAAM,IAAIA,MAAM,CAACZ,MAAM,KAAK,CAAC,EAAE;QAClC;QACAjB,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;QACxBE,YAAY,CAAC8B,IAAI,KAAK;UACpB,GAAGA,IAAI;UACPb,YAAY,EAAE,CAAC;UAAE;UACjBY,UAAU,EAAE,kBAAkB;UAC9BE,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLjC,kBAAkB,CAAC6B,MAAM,CAAC;QAC1B3B,YAAY,CAAC8B,IAAI,KAAK;UACpB,GAAGA,IAAI;UACPb,YAAY,EAAEU,MAAM,CAACZ,MAAM;UAC3Bc,UAAU,EAAE,kBAAkB;UAC9BE,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;MACL;IACF,CAAC,MAAM,IAAIN,IAAI,KAAK,MAAM,EAAE;MAC1B,IAAIO,QAAQ,GAAG,CAAC,GAAGrC,OAAO,CAAC;MAC3B,MAAMsC,iBAAiB,GAAGP,MAAM,CAACQ,GAAG,IAAIR,MAAM,CAACS,QAAQ,IAAIT,MAAM,CAACU,SAAS;MAE3E,IAAIH,iBAAiB,EAAE;QACrB,IAAIP,MAAM,CAACQ,GAAG,EAAE;UACdF,QAAQ,GAAGA,QAAQ,CAACK,MAAM,CAACC,MAAM,IAC/BA,MAAM,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,MAAM,CAACQ,GAAG,CAACM,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CACnE,CAAC;QACH;QACA,IAAIhB,MAAM,CAACS,QAAQ,EAAE;UACnBH,QAAQ,GAAGA,QAAQ,CAACK,MAAM,CAACC,MAAM,IAC/BA,MAAM,CAACH,QAAQ,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,MAAM,CAACS,QAAQ,CAACK,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAC7E,CAAC;QACH;QACA,IAAIhB,MAAM,CAACU,SAAS,EAAE;UACpBJ,QAAQ,GAAGA,QAAQ,CAACK,MAAM,CAACC,MAAM,IAC/BA,MAAM,CAACF,SAAS,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,MAAM,CAACU,SAAS,CAACI,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAC/E,CAAC;QACH;MACF;MAEA5C,kBAAkB,CAACkC,QAAQ,CAAC;MAC5BhC,YAAY,CAAC8B,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPb,YAAY,EAAEe,QAAQ,CAACjB,MAAM;QAC7Bc,UAAU,EAAE,aAAa;QACzBE,OAAO,EAAEE,iBAAiB,IAAID,QAAQ,CAACjB,MAAM,KAAK,CAAC,GACjD,sDAAsD,GACtD;MACJ,CAAC,CAAC,CAAC;IACL;EACJ,CAAC;EAED,MAAM4B,iBAAiB,GAAG,MAAOT,GAAG,IAAK;IACrC,IAAI;MACAxB,iBAAiB,CAAC,IAAI,CAAC;MACvB,MAAMkC,OAAO,GAAG,MAAMzD,gBAAgB,CAAC+C,GAAG,CAAC;MAC3C1B,wBAAwB,CAACoC,OAAO,CAAC;MACjCtC,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACVD,OAAO,CAACnB,KAAK,CAACoB,GAAG,CAAC;IACtB,CAAC,SAAS;MACNb,iBAAiB,CAAC,KAAK,CAAC;IAC5B;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAKqD,SAAS,EAAC,6BAA6B;IAAAC,QAAA,eACxCtD,OAAA;MAAKqD,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAEtBtD,OAAA,CAACF,eAAe;QACZyD,QAAQ,EAAEvB,YAAa;QACvB7B,OAAO,EAAEA,OAAQ,CAAC;MAAA;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAGF3D,OAAA,CAACJ,cAAc;QACXgE,KAAK,EAAC,gBAAgB;QACtBzD,OAAO,EAAEE,eAAgB;QACzBE,SAAS,EAAEA,SAAU;QACrBE,OAAO,EAAEA,OAAQ;QACjBE,KAAK,EAAEA,KAAM;QACbkD,aAAa,EAAEV,iBAAkB;QACjCW,cAAc,EAAE,CAAAvD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE8B,UAAU,MAAK,kBAAmB;QAC7DE,OAAO,EAAEhC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEgC,OAAQ,CAAC;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,EAGD9C,WAAW,iBACRb,OAAA,CAACH,kBAAkB;QACfuD,OAAO,EAAErC,qBAAsB;QAC/BgD,OAAO,EAAEA,CAAA,KAAM;UACXjD,cAAc,CAAC,KAAK,CAAC;UACrBE,wBAAwB,CAAC,IAAI,CAAC;QAClC;MAAE;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ,EAGA1C,cAAc,iBACXjB,OAAA;QAAKqD,SAAS,EAAC,4EAA4E;QAAAC,QAAA,eACvFtD,OAAA;UAAKqD,SAAS,EAAC;QAA6D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClF,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzD,EAAA,CApKuBD,cAAc;AAAA+D,EAAA,GAAd/D,cAAc;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}